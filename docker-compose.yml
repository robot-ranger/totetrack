version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: ghcr.io/robot-ranger/totetrack/backend:latest
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      # App settings
      SECRET_KEY: ${SECRET_KEY}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      PASSWORD_RESET_TOKEN_EXPIRE_MINUTES: ${PASSWORD_RESET_TOKEN_EXPIRE_MINUTES}
      INITIAL_SUPERUSER_EMAIL: ${INITIAL_SUPERUSER_EMAIL}
      INITIAL_SUPERUSER_PASSWORD: ${INITIAL_SUPERUSER_PASSWORD}
      # DB
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - media_data:/app/media
    ports:
      - "${BACKEND_PORT:-8880}:8000"

  frontend:
    image: ghcr.io/robot-ranger/totetrack/frontend:latest
    build:
      context: ./frontend
      dockerfile: dockerfile
      args:
        VITE_API_URL: /api
    depends_on:
      - backend
    ports:
      - "8888:80"

volumes:
  postgres_data:
  media_data:
